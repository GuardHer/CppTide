//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "src/http/views/MapPage.hpp"
#include <algorithm>
#include <deque>
#include <drogon/utils/OStringStream.h>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>
using namespace drogon;
std::string MapPage::genText(const DrTemplateData &MapPage_view_data)
{
    drogon::OStringStream MapPage_tmp_stream;
    std::string layoutName { "" };
    MapPage_tmp_stream << "<!DOCTYPE html>\n";
    MapPage_tmp_stream << "<html lang=\"en\">\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "<head>\n";
    MapPage_tmp_stream << "	<meta charset=\"UTF-8\">\n";
    MapPage_tmp_stream << "	<title>Hello</title>\n";
    MapPage_tmp_stream << "	<link rel=\"shortcut icon\" href=\"E:/Code/CppTide/src/http/views/static/favicon.ico\">\n";
    MapPage_tmp_stream << "	<link rel=\"stylesheet\" href=\"E:/Code/CppTide/src/http/views/static/bootstrap/bootstrap@4.6.min.css\">\n";
    MapPage_tmp_stream << "	<link rel=\"stylesheet\" href=\"E:/Code/CppTide/src/http/views/static/css/init.css\">\n";
    MapPage_tmp_stream << "</head>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "<body>\n";
    MapPage_tmp_stream << "	<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n";
    MapPage_tmp_stream << "		<div class=\"container\">\n";
    MapPage_tmp_stream << "			<a class=\"navbar-brand\" href=\"HomePage.html\">智能巡逻船控制后台</a>\n";
    MapPage_tmp_stream << "			<button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\"\n";
    MapPage_tmp_stream << "				data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n";
    MapPage_tmp_stream << "				aria-label=\"Toggle navigation\">\n";
    MapPage_tmp_stream << "				<span class=\"navbar-toggler-icon\"></span>\n";
    MapPage_tmp_stream << "			</button>\n";
    MapPage_tmp_stream << "			<div class=\"navbar-collapse collapse show\" id=\"navbarSupportedContent\" style>\n";
    MapPage_tmp_stream << "				<ul class=\"navbar-nav mr-auto\">\n";
    MapPage_tmp_stream << "					<li class=\"nav-item active\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"HomePage.html\">首页 <span class=\"sr-only\">(current)</span></a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"CameraPage.html\">视频显示</a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"MapPage.html\">地图显示</a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"ChartPage.html\">水质数据显示</a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "				</ul>\n";
    MapPage_tmp_stream << "				<ul class=\"navbar-nav\">\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<span class=\"nav-link\">Hello World</span>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"#\">退出登录</a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"LoginPage.html\">登录</a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "					<li class=\"nav-item\">\n";
    MapPage_tmp_stream << "						<a class=\"nav-link\" href=\"RegisterPage.html\">注册</a>\n";
    MapPage_tmp_stream << "					</li>\n";
    MapPage_tmp_stream << "				</ul>\n";
    MapPage_tmp_stream << "			</div>\n";
    MapPage_tmp_stream << "		</div>\n";
    MapPage_tmp_stream << "	</nav>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "	<div class=\"container\"></div>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "	<!-- 高德地图基础类库 -->\n";
    MapPage_tmp_stream << "	<script type=\"text/javascript\"\n";
    MapPage_tmp_stream << "		src=\"https://webapi.amap.com/maps?v=1.3&key=7a608be3db2f08377a8dbc098421ab64&&plugin=AMap.Scale,AMap.OverView,AMap.ToolBar\"></script>\n";
    MapPage_tmp_stream << "	<!-- 转换基础库 -->\n";
    MapPage_tmp_stream << "	<link rel=\"stylesheet\" href=\"E:/Code/CppTide/src/http/views/static/map/coordtransform_utils.js\">\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "	<style type=\"text/css\">\n";
    MapPage_tmp_stream << "		.input_LngLatText {\n";
    MapPage_tmp_stream << "			width: 100px;\n";
    MapPage_tmp_stream << "		}\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "		.txtarea {\n";
    MapPage_tmp_stream << "			min-height: 100px;\n";
    MapPage_tmp_stream << "			margin-top: 15px;\n";
    MapPage_tmp_stream << "			margin-left: 20px;\n";
    MapPage_tmp_stream << "			margin-bottom: 15px;\n";
    MapPage_tmp_stream << "		}\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "		#MapAmap {\n";
    MapPage_tmp_stream << "			border: solid 1px gray;\n";
    MapPage_tmp_stream << "			width: 100%;\n";
    MapPage_tmp_stream << "			height: 400px;\n";
    MapPage_tmp_stream << "			/*overflow: hidden;\n";
    MapPage_tmp_stream << "			position: absolute;*/\n";
    MapPage_tmp_stream << "			margin: 0;\n";
    MapPage_tmp_stream << "			z-index: -2;\n";
    MapPage_tmp_stream << "			font-size: 12px;\n";
    MapPage_tmp_stream << "			color: black;\n";
    MapPage_tmp_stream << "		}\n";
    MapPage_tmp_stream << "	</style>\n";
    MapPage_tmp_stream << "	";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "	";
    MapPage_tmp_stream << "	<div class=\"container body-content\" style=\"background-color: white;\">\n";
    MapPage_tmp_stream << "		<!-- 公共变量 -->\n";
    MapPage_tmp_stream << "		<script type=\"text/javascript\">\n";
    MapPage_tmp_stream << "			var lng = 121.473992206;\n";
    MapPage_tmp_stream << "			var lat = 31.2412402273;\n";
    MapPage_tmp_stream << "			var lngGCJ = 0;\n";
    MapPage_tmp_stream << "			var latGCJ = 0;\n";
    MapPage_tmp_stream << "			var lngBD = 0;\n";
    MapPage_tmp_stream << "			var latBD = 0;\n";
    MapPage_tmp_stream << "			var zoom = 12;\n";
    MapPage_tmp_stream << "		</script>\n";
    MapPage_tmp_stream << "	</div>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "	<div class=\"container body-content\" style=\"background-color: white; top:50px;\">\n";
    MapPage_tmp_stream << "		<br>\n";
    MapPage_tmp_stream << "		<div class=\"card\" style=\"width:100%\">\n";
    MapPage_tmp_stream << "			<h5 class=\"card-header\">说明</h5>\n";
    MapPage_tmp_stream << "			<div class=\"card-body\">\n";
    MapPage_tmp_stream << "				<div class=\"card-text\">\n";
    MapPage_tmp_stream << "					本页面展示了原始GPS坐标 (WGS-84)，分别转换为 GCJ02坐标 和 BD09坐标 的定位效果<br><br>\n";
    MapPage_tmp_stream << "					<ul>\n";
    MapPage_tmp_stream << "						<li>WGS-84 通常叫做“原始GPS坐标”。是从硬件设备默认采集到的坐标。GGA输出格式为ddmm.mmmm，应转换为dd.dddd格式<br>\n";
    MapPage_tmp_stream << "							&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n";
    MapPage_tmp_stream << "							国外的地图软件均使用该坐标系（如Google Maps、Bing Maps, Here Maps），中国区的“谷歌地图”除外\n";
    MapPage_tmp_stream << "						</li>\n";
    MapPage_tmp_stream << "						<li>GCJ02&nbsp;&nbsp;&nbsp;俗称“火星坐标”。高德地图，腾讯地图，谷歌地图（中国区域）使用该坐标</li>\n";
    MapPage_tmp_stream << "						<li>其他&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;搜狗地图、百度地图、图吧地图等，均采用自定坐标</li>\n";
    MapPage_tmp_stream << "					</ul>\n";
    MapPage_tmp_stream << "				</div>\n";
    MapPage_tmp_stream << "			</div>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "		</div>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "		<div class=\"card\" style=\"width:100%\">\n";
    MapPage_tmp_stream << "			<h5 class=\"card-header\">高德地图 - GCJ坐标系</h5>\n";
    MapPage_tmp_stream << "			<div class=\"card-body\">\n";
    MapPage_tmp_stream << "				Lng：<input id=\"txtLngGCJ\" type=\"text\" class=\"input_LngLatText\" value=\"\"\n";
    MapPage_tmp_stream << "					style=\"width:150px;\" />&nbsp;&nbsp;\n";
    MapPage_tmp_stream << "				Lat：<input id=\"txtLatGCJ\" type=\"text\" class=\"input_LngLatText\" value=\"\"\n";
    MapPage_tmp_stream << "					style=\"width:150px;\" />&nbsp;&nbsp;\n";
    MapPage_tmp_stream << "				<input id=\"btnGCJ\" type=\"button\" value=\"定位\" onclick=\"funGCJ();\" style=\"height:27px\" /><br><br>\n";
    MapPage_tmp_stream << "				<button type=\"button\" class=\"btn btn-outline-success \" onclick=\"funGCJ();\">自我定位</button>\n";
    MapPage_tmp_stream << "				<button type=\"button\" class=\"btn btn-outline-success \">规划</button>\n";
    MapPage_tmp_stream << "				<button type=\"button\" class=\"btn btn-outline-success \">出发</button>\n";
    MapPage_tmp_stream << "				<!-- Amap -->\n";
    MapPage_tmp_stream << "				<div id=\"MapAmap\" style=\"float: left; z-index: 0;\" class=\"mt-3\"></div>\n";
    MapPage_tmp_stream << "				<script type=\"text/javascript\">\n";
    MapPage_tmp_stream << "					var mapA;\n";
    MapPage_tmp_stream << "					function mapInit() {\n";
    MapPage_tmp_stream << "						mapA = new AMap.Map(\"MapAmap\", {\n";
    MapPage_tmp_stream << "							center: new AMap.LngLat(lng, lat), //地图中心点\n";
    MapPage_tmp_stream << "							level: zoom  //地图显示的比例尺级别\n";
    MapPage_tmp_stream << "						});\n";
    MapPage_tmp_stream << "						mapA.addControl(new AMap.Scale({ visible: true })); //比例尺\n";
    MapPage_tmp_stream << "						mapA.addControl(new AMap.ToolBar({ visible: true })); //导航缩放\n";
    MapPage_tmp_stream << "						mapA.addControl(new AMap.OverView({ visible: true })); //右下角鹰眼\n";
    MapPage_tmp_stream << "					}\n";
    MapPage_tmp_stream << "					mapInit();\n";
    MapPage_tmp_stream << "				</script>\n";
    MapPage_tmp_stream << "				<script type=\"text/javascript\">\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "					function funGCJ() {\n";
    MapPage_tmp_stream << "						lngGCJ = document.getElementById(\"txtLngGCJ\").value;\n";
    MapPage_tmp_stream << "						latGCJ = document.getElementById(\"txtLatGCJ\").value;\n";
    MapPage_tmp_stream << "						console.log(lngGCJ)\n";
    MapPage_tmp_stream << "						console.log(latGCJ)\n";
    MapPage_tmp_stream << "						//临时变量\n";
    MapPage_tmp_stream << "						lngGCJ = 113.03172750179019;\n";
    MapPage_tmp_stream << "						latGCJ = 28.24802809876224;\n";
    MapPage_tmp_stream << "						var pointA = new AMap.LngLat(lngGCJ, latGCJ);\n";
    MapPage_tmp_stream << "						var marker = new AMap.Marker({\n";
    MapPage_tmp_stream << "							position: pointA,\n";
    MapPage_tmp_stream << "							map: mapA\n";
    MapPage_tmp_stream << "						});\n";
    MapPage_tmp_stream << "						marker.setMap(mapA);\n";
    MapPage_tmp_stream << "						mapA.setCenter(pointA);\n";
    MapPage_tmp_stream << "					}\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "					var first = setInterval(function () {  //设置定时器#}\n";
    MapPage_tmp_stream << "						funGCJ();\n";
    MapPage_tmp_stream << "						console.log(lngGCJ);\n";
    MapPage_tmp_stream << "						console.log(latGCJ);\n";
    MapPage_tmp_stream << "					}, 1000)\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "				</script>\n";
    MapPage_tmp_stream << "			</div>\n";
    MapPage_tmp_stream << "		</div>\n";
    MapPage_tmp_stream << "	</div>\n";
    MapPage_tmp_stream << "	</div>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "</body>\n";
    MapPage_tmp_stream << "\n";
    MapPage_tmp_stream << "</html>\n";
    if (layoutName.empty()) {
        std::string ret { std::move(MapPage_tmp_stream.str()) };
        return ret;
    } else {
        auto templ = DrTemplateBase::newTemplate(layoutName);
        if (!templ) return "";
        HttpViewData data = MapPage_view_data;
        auto str          = std::move(MapPage_tmp_stream.str());
        if (!str.empty() && str[str.length() - 1] == '\n') str.resize(str.length() - 1);
        data[""] = std::move(str);
        return templ->genText(data);
    }
}
