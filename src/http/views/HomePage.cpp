//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "src/http/views/HomePage.hpp"
#include <algorithm>
#include <deque>
#include <drogon/utils/OStringStream.h>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <unordered_map>
#include <unordered_set>
#include <vector>
using namespace drogon;
std::string HomePage::genText(const DrTemplateData &HomePage_view_data)
{
    drogon::OStringStream HomePage_tmp_stream;
    std::string layoutName { "" };
    HomePage_tmp_stream << "<!DOCTYPE html>\n";
    HomePage_tmp_stream << "<html lang=\"en\">\n";
    HomePage_tmp_stream << "\n";
    HomePage_tmp_stream << "<head>\n";
    HomePage_tmp_stream << "	<meta charset=\"UTF-8\">\n";
    HomePage_tmp_stream << "	<title>";
    {
        auto &val = HomePage_view_data["icon"];
        if (val.type() == typeid(const char *)) {
            HomePage_tmp_stream << *(std::any_cast<const char *>(&val));
        } else if (val.type() == typeid(std::string) || val.type() == typeid(const std::string)) {
            HomePage_tmp_stream << *(std::any_cast<const std::string>(&val));
        }
    }
    HomePage_tmp_stream << "</title>\n";
    // HomePage_tmp_stream << "	<link rel=\"shortcut icon\" href=\"[[ icon ]]\">\n";
    HomePage_tmp_stream << "    <link rel=\"shortcut icon\" href=\"";
    {
        auto &val = HomePage_view_data["icon"];
        if (val.type() == typeid(const char *)) {
            HomePage_tmp_stream << *(std::any_cast<const char *>(&val));
        } else if (val.type() == typeid(std::string) || val.type() == typeid(const std::string)) {
            HomePage_tmp_stream << *(std::any_cast<const std::string>(&val));
        }
    }
    HomePage_tmp_stream << "\">\n";
    HomePage_tmp_stream << "	<link rel=\"stylesheet\" href=\"E:/Code/CppTide/src/http/views/static/bootstrap/bootstrap@4.6.min.css\">\n";
    HomePage_tmp_stream << "	<link rel=\"stylesheet\" href=\"E:/Code/CppTide/src/http/views/static/css/init.css\">\n";
    HomePage_tmp_stream << "</head>\n";
    HomePage_tmp_stream << "\n";
    HomePage_tmp_stream << "<body>\n";
    HomePage_tmp_stream << "	<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n";
    HomePage_tmp_stream << "		<div class=\"container\">\n";
    HomePage_tmp_stream << "			<a class=\"navbar-brand\" href=\"HomePage.html\">智能巡逻船控制后台</a>\n";
    HomePage_tmp_stream << "			<button class=\"navbar-toggler collapsed\" type=\"button\" data-toggle=\"collapse\"\n";
    HomePage_tmp_stream << "				data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\n";
    HomePage_tmp_stream << "				aria-label=\"Toggle navigation\">\n";
    HomePage_tmp_stream << "				<span class=\"navbar-toggler-icon\"></span>\n";
    HomePage_tmp_stream << "			</button>\n";
    HomePage_tmp_stream << "			<div class=\"navbar-collapse collapse show\" id=\"navbarSupportedContent\" style>\n";
    HomePage_tmp_stream << "				<ul class=\"navbar-nav mr-auto\">\n";
    HomePage_tmp_stream << "					<li class=\"nav-item active\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"HomePage.html\">首页 <span class=\"sr-only\">(current)</span></a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"CameraPage.html\">视频显示</a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"MapPage.html\">地图显示</a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"ChartPage.html\">水质数据显示</a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "				</ul>\n";
    HomePage_tmp_stream << "				<ul class=\"navbar-nav\">\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<span class=\"nav-link\">Hello World</span>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"#\">退出登录</a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"LoginPage.html\">登录</a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "					<li class=\"nav-item\">\n";
    HomePage_tmp_stream << "						<a class=\"nav-link\" href=\"RegisterPage.html\">注册</a>\n";
    HomePage_tmp_stream << "					</li>\n";
    HomePage_tmp_stream << "				</ul>\n";
    HomePage_tmp_stream << "			</div>\n";
    HomePage_tmp_stream << "		</div>\n";
    HomePage_tmp_stream << "	</nav>\n";
    HomePage_tmp_stream << "\n";
    HomePage_tmp_stream << "	<div class=\"container\"></div>\n";
    HomePage_tmp_stream << "\n";
    HomePage_tmp_stream << "	<h1>首页</h1>\n";
    HomePage_tmp_stream << "	<p>材质：201 国标0.8厚</p>\n";
    HomePage_tmp_stream << "	<p>做工：烤漆满焊 工艺 </p>\n";
    HomePage_tmp_stream << "	<p>尺寸 ：1米长38宽 25高</p>\n";
    HomePage_tmp_stream << "	<p>硬件：黑皮静音2马达 大功率电路板</p>\n";
    HomePage_tmp_stream << "	<p>辅助配件：4根5mm 双卡扣 80三叶加强浆 led灯 等等 </p>\n";
    HomePage_tmp_stream << "	<p>电池为18650 动力电芯 50a的保护板 容量20ah</p>\n";
    HomePage_tmp_stream << "	<img src=\"E:/Code/CppTide/src/http/views/static/img/ship1.png\" alt=\"ship1\">\n";
    HomePage_tmp_stream << "	<img src=\"E:/Code/CppTide/src/http/views/static/img/ship2.png\" alt=\"ship2\">\n";
    HomePage_tmp_stream << "	<img src=\"E:/Code/CppTide/src/http/views/static/img/ship3.png\" alt=\"ship3\">\n";
    HomePage_tmp_stream << "	<img src=\"E:/Code/CppTide/src/http/views/static/img/ship4.png\" alt=\"ship4\">\n";
    HomePage_tmp_stream << "	<img src=\"E:/Code/CppTide/src/http/views/static/img/ship5.png\" alt=\"ship5\">\n";
    HomePage_tmp_stream << "</body>\n";
    HomePage_tmp_stream << "\n";
    HomePage_tmp_stream << "</html>\n";
    if (layoutName.empty()) {
        std::string ret { std::move(HomePage_tmp_stream.str()) };
        return ret;
    } else {
        auto templ = DrTemplateBase::newTemplate(layoutName);
        if (!templ) return "";
        HttpViewData data = HomePage_view_data;
        auto str          = std::move(HomePage_tmp_stream.str());
        if (!str.empty() && str[str.length() - 1] == '\n') str.resize(str.length() - 1);
        data[""] = std::move(str);
        return templ->genText(data);
    }
}
